package com.javarush.task.task25.task2503;

import java.lang.reflect.Array;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.LinkedList;
import java.util.List;
/*
Не мог не сохранить. Все решения, которые видел затрачивают больше ресурсов, т.к. лучшее, что я видел: 
добавляется в лист элементы, а затем поплавком сортруются:). что достаточно долго, 
я же просто создаю буфер размера разрешенных элементов и запихиваю туда элементы.
Если кто-то посередине скрыт, то данного элемента буфера не будет, и соответственно в дальнейщем когда я в лист по очереди из 
буфера беру элементы не добавляю этот элемент.
*/
public enum Column implements Columnable{
    Customer("Customer"),
    BankName("Bank Name"),
    AccountNumber("Account Number"),
    Amount("Available Amount");

    private String columnName;

    private static int[] realOrder;

    private Column(String columnName) {
        this.columnName = columnName;
    }

    /**
     * Задает новый порядок отображения колонок, который хранится в массиве realOrder.
     * realOrder[индекс в энуме] = порядок отображения; -1, если колонка не отображается.
     *
     * @param newOrder новая последовательность колонок, в которой они будут отображаться в таблице
     * @throws IllegalArgumentException при дубликате колонки
     */
    public static void configureColumns(Column... newOrder) {
        realOrder = new int[values().length];
        for (Column column : values()) {
            realOrder[column.ordinal()] = -1;
            boolean isFound = false;

            for (int i = 0; i < newOrder.length; i++) {
                if (column == newOrder[i]) {
                    if (isFound) {
                        throw new IllegalArgumentException("Column '" + column.columnName + "' is already configured.");
                    }
                    realOrder[column.ordinal()] = i;
                    isFound = true;
                }
            }
        }
    }

    /**
     * Вычисляет и возвращает список отображаемых колонок в сконфигурированом порядке (см. метод configureColumns)
     * Используется поле realOrder.
     *
     * @return список колонок
     */
    public static List<Column> getVisibleColumns() {
        List<Column> result = new LinkedList<>();
        int sizeOfNewOrder = 0;
        //ищу длину необходимого листа
        for (int i = 0; i < realOrder.length; i++) {
            if (sizeOfNewOrder < realOrder[i])
                sizeOfNewOrder = realOrder[i];
        }
        //создаю лист, в который буду добавлять элементы
        Column[] buffer = new Column[sizeOfNewOrder+1];
        for (int i = 0; i < realOrder.length; i++) {
            if (realOrder[i] != -1) {
                buffer[realOrder[i]] = Column.values()[i];
            }
        }
        for (int i = 0; i < buffer.length; i++) {
            if (buffer[i] != null)
                result.add(buffer[i]);
        }
        return result;
    }

    public void hide() {
        realOrder[this.ordinal()] = -1;
    }

    @Override
    public String getColumnName() {
        return columnName;
    }

    public boolean isShown() {
        return (realOrder[this.ordinal()] == -1 ? false : true);
    }

}
